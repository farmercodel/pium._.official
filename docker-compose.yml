services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    stdin_open: true
    tty: true
    networks:
      - pium_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql+asyncpg://pium_user:ktuzvxshjfqmwg3gcd3ktpxnh9haj28zhjx5srx0hu0@postgres:5432/pium_db
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pium_network


  postgres:
    image: postgres:15-alpine
    container_name: pium_postgres
    environment:
      POSTGRES_DB: pium_db
      POSTGRES_USER: pium_user
      POSTGRES_PASSWORD: ktuzvxshjfqmwg3gcd3ktpxnh9haj28zhjx5srx0hu0
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - pium_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pium_user -d pium_db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local

networks:
  pium_network:
    driver: bridge